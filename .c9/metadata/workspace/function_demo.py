{"changed":true,"filter":false,"title":"function_demo.py","tooltip":"/function_demo.py","value":"def subtractor(a, b): \n   \"\"\"I subtract b from a and return the result\"\"\"  \n   print(\"I'm a function. My name is {}\".format(subtractor.__name__))\n   print(\"I'm about to subtract {} and {}\\n\\n\".format(a,b))\n   return a - b  # i output a value by using the return statement\n\n\nif __name__ == '__main__':\n\tsubtractor(3, 2)\n\t\ndef function3(a=1, b=1): \n  \"\"\"I'm a function that calls other functions \"\"\"\n  print(\"I'm {} and I'm about to call subtractor function\".format(function3.__name__))\n  total = subtractor(a,b)\n  print(\"I'm {} and I'm about to call print_function\".format(function3.__name__))\n  print_function()\n  print(\"I'm {} and I'm about return total\".format(function3.__name__))\n  return total\n\nif __name__ == '__main__':\n  total = function3()\n  print(\"total is {}\".format(total))","undoManager":{"mark":2,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["def subtractor(a, b): ","   \"\"\"I subtract b from a and return the result\"\"\"  ","   print(\"I'm a function. My name is {}\".format(subtractor.__name__))","   print(\"I'm about to subtract {} and {}\\n\\n\".format(a,b))","   return a - b  # i output a value by using the return statement","","","if __name__ == '__main__':","\tsubtractor(3, 2)",""],"id":1}],[{"start":{"row":9,"column":0},"end":{"row":20,"column":36},"action":"insert","lines":["def function3(a=1, b=1): ","  \"\"\"I'm a function that calls other functions \"\"\"","  print(\"I'm {} and I'm about to call subtractor function\".format(function3.__name__))","  total = subtractor(a,b)","  print(\"I'm {} and I'm about to call print_function\".format(function3.__name__))","  print_function()","  print(\"I'm {} and I'm about return total\".format(function3.__name__))","  return total","","if __name__ == '__main__':","  total = function3()","  print(\"total is {}\".format(total))"],"id":2}],[{"start":{"row":8,"column":17},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"insert","lines":["\t"]}],[{"start":{"row":15,"column":18},"end":{"row":15,"column":19},"action":"insert","lines":[":"],"id":4}],[{"start":{"row":15,"column":18},"end":{"row":15,"column":19},"action":"remove","lines":[":"],"id":5}]]},"ace":{"folds":[],"scrolltop":165.20000000000013,"scrollleft":0,"selection":{"start":{"row":15,"column":18},"end":{"row":15,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":14,"state":"start","mode":"ace/mode/python"}},"timestamp":1458456219000}